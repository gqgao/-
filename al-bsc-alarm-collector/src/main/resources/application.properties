#corba
#corbaIor串
corba.ior=IOR:000000000000002649444C3A336770707361352E6F72672F455049525053797374656D2F45504952503A312E300000000000000200000000000000A0000102000000000E3133342E3134302E312E3134300052CB000000495374616E64617264496D706C4E616D652F64656661756C74504F412F636F6D2E7A74652E756D732E6E6F727468626F756E642E636F6D6D6F6E2E65706972702E4550495250496D706C000000000000020000000000000008000000004A414300000000010000001C00000000000100010000000105010001000101090000000105010001000000010000002C0000000000000001000000010000001C00000000000100010000000105010001000101090000000105010001
#消费者irp类型
corba.irp-types=CS_IRP,ALARM_IRP
#orb参数集合 配置形式如示例（后续配置请保留该示例）
#corba.props.key=value
corba.props.org.omg.CORBA.ORBClass=org.jacorb.orb.ORB
corba.props.org.omg.CORBA.ORBSingletonClass=org.jacorb.orb.ORBSingleton
corba.props.org.omg.PortableInterceptor.ORBInitializerClass.bidir_init=org.jacorb.orb.giop.BiDirConnectionInitializer
corba.props.OAIAddr=134.130.17.24
corba.props.OAPort=22234

server.port=8081

#alarm参数
#每条告警默认含有的字段
alarm.columns=CREATIONTIMESTAMP,ADDITIONALTEXT,NOTIFICATIONID,REGION,REGIONALISM,NECLASS,EQUIPMENTNAME,IPADDRESS,VENDOR_ALARMID,PERCEIVEDSEVERITY,ALARMTYPE,ALARMTITLE,ALARMDETAIL,LOCATIONINFO,RACK,SHELF,SLOT,BOARDLOCATION,PORTLOCATION,TIMESLOT,EVENTTIME,CLEARANCETIMESTAMP,REPAIRACTIONADVICE
#每条厂家特有的告警字段
alarm.private-columns=BSCNAME,BTSID,CELLID,CELLNAME,RRUNAME,CLEARTYPE,OMCID,CHANNELNUMBER,ALARMCODE,ALARMREASONCODE,ALARM_CODE_DESCRIPTION,ALARM_REASON_DESCRIPTION,RRU_ID,MANAGED_OBJECT_INSTANCE,SYSTEM_DN
#每条告警可配置固定字段，配置形式如示例（后续配置请保留该示例）
#示例：alarm.add-fixed-field.key=value
#告警匹配模式正则表达式
alarm.include-regex=ALARM IRP[\\s\\S]*type_name\":\"x(1|5)\"
#告警过滤模式正则表达式
alarm.exclude-regex=


#kafka
#是否发送至kafka标志
kafka.send-flag=true
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=134.129.72.202:9092,134.129.72.203:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=FJ-W-FZ-ZTE-CDMA-CLCT-GROUP
# 指定默认topic id
spring.kafka.template.default-topic=FJ-W-FZ-ZTE-CDMA-CLCT
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency=10
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=1000
